{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/home/clgonzalezgroh/capa/69prisma-remix/app/root.tsx", "/home/clgonzalezgroh/capa/69prisma-remix/app/routes/index.tsx", "/home/clgonzalezgroh/capa/69prisma-remix/app/routes/login.tsx", "../app/components/layout.tsx", "../app/components/form-field.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\"\n\nimport type { MetaFunction, LinksFunction } from \"@remix-run/node\"\n\nimport styles from \"./styles/app.css\"\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: styles }]\n}\n\n// ...\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n})\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n", "// ./app/routes/index.tsx\nexport default function Index() {\n  return (\n    <div className=\"h-screen bg-slate-700 flex justify-center items-center\">\n      <h2 className=\"text-blue-600 font-extrabold text-5xl\">\n        TailwindCSS Is Working!\n      </h2>\n    </div>\n  )\n}\n", "import React, { useState, useEffect } from \"react\"\nimport { Layout } from \"~/components/layout\"\nimport { FormField } from \"~/components/form-field\"\n\nexport default function Login() {\n  const [action, setAction] = useState(\"login\")\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  })\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData((form) => ({\n      ...form,\n      [e.target.name]: e.target.value,\n    }))\n  }\n\n  return (\n    <Layout>\n      <div className=\"h-full justify-center items-center flex flex-col gap-y-4\">\n        <button\n          onClick={() => setAction(action == \"login\" ? \"register\" : \"login\")}\n          className=\"absolute top-8 right-8 rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n        >\n          {action === \"login\" ? \"Sign Up\" : \"Sign In\"}\n        </button>\n        <h2 className=\"text-5xl font-extrabold text-yellow-300\">\n          Welcome to Kudos!\n        </h2>\n        <p className=\"font-semibold text-slate-300\">\n          {action === \"login\"\n            ? \"Log In To Give Some Praise!\"\n            : \"Sign Up To Get Started!\"}\n        </p>\n        <form method=\"POST\" className=\"rounded-2xl bg-gray-200 p-6 w-96\">\n          <div className=\"w-full text-center\">\n            <FormField\n              htmlFor=\"email\"\n              label=\"Email\"\n              value={formData.email}\n              onChange={(e) => handleChange(e)}\n            />\n            <FormField\n              htmlFor=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={formData.password}\n              onChange={(e) => handleChange(e)}\n            />\n            {action === \"register\" ? (\n              <>\n                <FormField\n                  htmlFor=\"firstName\"\n                  label=\"First Name\"\n                  value={formData.firstName}\n                  onChange={(e) => handleChange(e)}\n                />\n                <FormField\n                  htmlFor=\"lastName\"\n                  label=\"Last Name\"\n                  value={formData.lastName}\n                  onChange={(e) => handleChange(e)}\n                />\n              </>\n            ) : null}\n            <button\n              type=\"submit\"\n              name=\"_action\"\n              value={action}\n              className=\"rounded-xl mt-2 bg-yellow-300 px-3 py-2 text-blue-600 font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n            >\n              {action === \"login\" ? \"Sign In\" : \"Sign Up\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </Layout>\n  )\n}\n", "import React from \"react\"\n\nexport const Layout = ({ children }: { children: React.ReactNode }) => {\n  return <div className=\"h-screen w-full bg-blue-600 font-mono\">{children}</div>\n}\n", "// app/components/form-field.tsx\ninterface FormFieldProps {\n  htmlFor: string\n  label: string\n  type?: string\n  value: any\n  onChange?: (...args: any) => any\n}\n\nexport function FormField({\n  htmlFor,\n  label,\n  type = \"text\",\n  value,\n  onChange = () => {},\n}: FormFieldProps) {\n  return (\n    <>\n      <label htmlFor={htmlFor} className=\"text-blue-600 font-semibold\">\n        {label}\n      </label>\n      <input\n        onChange={onChange}\n        type={type}\n        id={htmlFor}\n        name={htmlFor}\n        className=\"w-full p-2 rounded-xl my-2\"\n        value={value}\n      />\n    </>\n  )\n}\n", "export default {'version':'d2df7e2a','entry':{'module':'/build/entry.client-3PM6ZBI6.js','imports':['/build/_shared/chunk-KCAHDXWN.js','/build/_shared/chunk-IYRIQ6PI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-HAEV2BF3.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-RSUXUL4D.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-A42SPRDU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-D2DF7E2A.js'};", "\nimport * as entryServer from \"/home/clgonzalezgroh/capa/69prisma-remix/app/entry.server.tsx\";\nimport * as route0 from \"/home/clgonzalezgroh/capa/69prisma-remix/app/root.tsx\";\nimport * as route1 from \"/home/clgonzalezgroh/capa/69prisma-remix/app/routes/index.tsx\";\nimport * as route2 from \"/home/clgonzalezgroh/capa/69prisma-remix/app/routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": []
}
