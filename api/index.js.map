{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/home/clgonzalezgroh/capa/69prisma-remix/app/root.tsx", "/home/clgonzalezgroh/capa/69prisma-remix/app/routes/logout.ts", "../app/utils/auth.server.ts", "../app/utils/prisma.server.ts", "../app/utils/user.server.ts", "/home/clgonzalezgroh/capa/69prisma-remix/app/routes/index.ts", "/home/clgonzalezgroh/capa/69prisma-remix/app/routes/login.tsx", "../app/components/layout.tsx", "../app/components/form-field.tsx", "../app/utils/validators.server.ts", "/home/clgonzalezgroh/capa/69prisma-remix/app/routes/home.tsx", "../app/components/user-panel.tsx", "../app/components/user-circle.tsx", "../app/utils/kudo.server.ts", "../app/utils/constants.ts", "../app/components/kudo.tsx", "../app/components/search-bar.tsx", "../app/components/select-box.tsx", "../app/components/recent-bar.tsx", "/home/clgonzalezgroh/capa/69prisma-remix/app/routes/home/kudo.$userId.tsx", "../app/components/portal.tsx", "../app/components/modal.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\"\n\nimport type { MetaFunction, LinksFunction } from \"@remix-run/node\"\n\nimport styles from \"./styles/app.css\"\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: styles }]\n}\n\n// ...\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n})\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n", "// app/routes/logout.ts\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\"\nimport { redirect } from \"@remix-run/node\"\nimport { logout } from \"~/utils/auth.server\"\n\nexport const action: ActionFunction = async ({ request }) => logout(request)\nexport const loader: LoaderFunction = async () => redirect(\"/\")\n", "// app/utils/auth.server.ts\nimport type { RegisterForm, LoginForm } from \"./types.server\"\nimport bcrypt from \"bcryptjs\"\nimport { prisma } from \"./prisma.server\"\nimport { createUser } from \"./user.server\"\nimport { json, createCookieSessionStorage, redirect } from \"@remix-run/node\"\n\nconst sessionSecret = process.env.SESSION_SECRET\nif (!sessionSecret) {\n  throw new Error(\"SESSION_SECRET must be set\")\n}\nconst storage = createCookieSessionStorage({\n  cookie: {\n    name: \"kudos-session\",\n    secure: process.env.NODE_ENV === \"production\",\n    secrets: [sessionSecret],\n    sameSite: \"lax\",\n    path: \"/\",\n    maxAge: 60 * 60 * 24 * 30,\n    httpOnly: true,\n  },\n})\n\nexport async function createUserSession(userId: string, redirectTo: string) {\n  const session = await storage.getSession()\n  session.set(\"userId\", userId)\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await storage.commitSession(session),\n    },\n  })\n}\n\nexport async function register(user: RegisterForm) {\n  const exist = await prisma.user.count({ where: { email: user.email } })\n  if (exist) {\n    return json(\n      { error: \"User already exists with this email\" },\n      { status: 400 }\n    )\n  }\n\n  const newUser = await createUser(user)\n\n  if (!newUser) {\n    return json(\n      {\n        error: \"Something went wrong trying to create a new user\",\n        fields: { email: user.email, password: user.password },\n      },\n      { status: 400 }\n    )\n  }\n\n  return createUserSession(newUser.id, \"/\")\n}\n\nexport async function login(form: LoginForm) {\n  const user = await prisma.user.findUnique({ where: { email: form.email } })\n\n  if (!user || !(await bcrypt.compare(form.password, user.password))) {\n    return json({ error: \"Incorrect login\" }, { status: 400 })\n  }\n\n  return createUserSession(user.id, \"/\")\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const session = await getUserSession(request)\n  const userId = session.get(\"userId\")\n  if (!userId || typeof userId !== \"string\") {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]])\n    throw redirect(`/login?${searchParams}`)\n  }\n  return userId\n}\n\nfunction getUserSession(request: Request) {\n  return storage.getSession(request.headers.get(\"Cookie\"))\n}\n\nasync function getUserId(request: Request) {\n  const session = await getUserSession(request)\n  const userId = session.get(\"userId\")\n  if (!userId || typeof userId !== \"string\") return null\n  return userId\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request)\n  if (typeof userId !== \"string\") {\n    return null\n  }\n\n  try {\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n      select: { id: true, email: true, profile: true },\n    })\n    return user\n  } catch {\n    throw logout(request)\n  }\n}\n\nexport async function logout(request: Request) {\n  const session = await getUserSession(request)\n  return redirect(\"/login\", {\n    headers: {\n      \"Set-Cookie\": await storage.destroySession(session),\n    },\n  })\n}\n", "// app/utils/prisma.server.ts\nimport { PrismaClient } from \"@prisma/client\"\n\nlet prisma: PrismaClient\ndeclare global {\n  var __db: PrismaClient | undefined\n}\n\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient()\n  prisma.$connect()\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient()\n    global.__db.$connect()\n  }\n  prisma = global.__db\n}\n\nexport { prisma }\n", "import { prisma } from \"./prisma.server\"\nimport bcrypt from \"bcryptjs\"\nimport type { RegisterForm } from \"./types.server\"\nimport type { User } from \"@prisma/client\"\n\nexport const createUser = async (user: RegisterForm) => {\n  const passwordHash = await bcrypt.hash(user.password, 10)\n  const newUser = await prisma.user.create({\n    data: {\n      email: user.email,\n      password: passwordHash,\n      profile: {\n        firstName: user.firstName,\n        lastName: user.lastName,\n      },\n    },\n  })\n  return { id: newUser.id, email: user.email }\n}\n\nexport const getOtherUsers = async (userId: string) => {\n  return prisma.user.findMany({\n    where: {\n      id: { not: userId },\n    },\n    orderBy: { profile: { firstName: \"asc\" } },\n  })\n}\n\nexport const getUserById = async (userId: string): Promise<User | null> => {\n  return await prisma.user.findUnique({ where: { id: userId } })\n}\n", "// app/routes/index.ts\n\nimport type { LoaderFunction } from \"@remix-run/node\"\nimport { redirect } from \"@remix-run/node\"\nimport { requireUserId } from \"~/utils/auth.server\"\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await requireUserId(request)\n  return redirect(\"/home\")\n}\n", "import React, { useState, useEffect, useRef } from \"react\"\nimport { Layout } from \"~/components/layout\"\nimport { FormField } from \"~/components/form-field\"\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\"\nimport { json, redirect } from \"@remix-run/node\"\nimport { useActionData } from \"@remix-run/react\"\nimport {\n  validateEmail,\n  validateName,\n  validatePassword,\n} from \"~/utils/validators.server\"\n\nimport { login, register, getUser } from \"~/utils/auth.server\"\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // If there's already a user in the session, redirect to the home page\n  return (await getUser(request)) ? redirect(\"/\") : null\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const form = await request.formData()\n  const action = form.get(\"_action\")\n  const email = form.get(\"email\")\n  const password = form.get(\"password\")\n  let firstName = form.get(\"firstName\")\n  let lastName = form.get(\"lastName\")\n\n  if (\n    typeof action !== \"string\" ||\n    typeof email !== \"string\" ||\n    typeof password !== \"string\"\n  ) {\n    return json({ error: `Invalid Form Data`, form: action }, { status: 400 })\n  }\n\n  if (\n    action === \"register\" &&\n    (typeof firstName !== \"string\" || typeof lastName !== \"string\")\n  ) {\n    return json({ error: `Invalid Form Data`, form: action }, { status: 400 })\n  }\n\n  const errors = {\n    email: validateEmail(email),\n    password: validatePassword(password),\n    ...(action === \"register\"\n      ? {\n          firstName: validateName((firstName as string) || \"\"),\n          lastName: validateName((lastName as string) || \"\"),\n        }\n      : {}),\n  }\n\n  if (Object.values(errors).some(Boolean)) {\n    return json(\n      {\n        errors,\n        fields: { email, password, firstName, lastName },\n        form: action,\n      },\n      { status: 400 }\n    )\n  }\n\n  switch (action) {\n    case \"login\": {\n      return await login({ email, password })\n    }\n    case \"register\": {\n      firstName = firstName as string\n      lastName = lastName as string\n      return await register({ email, password, firstName, lastName })\n    }\n    default:\n      return json({ error: `Invalid Form Data` }, { status: 400 })\n  }\n}\n\nexport default function Login() {\n  const [action, setAction] = useState(\"login\")\n\n  const actionData = useActionData()\n  // 2\n  const firstLoad = useRef(true)\n  const [errors, setErrors] = useState(actionData?.errors || {})\n  const [formError, setFormError] = useState(actionData?.error || \"\")\n  // 3\n  const [formData, setFormData] = useState({\n    email: actionData?.fields?.email || \"\",\n    password: actionData?.fields?.password || \"\",\n    firstName: actionData?.fields?.lastName || \"\",\n    lastName: actionData?.fields?.firstName || \"\",\n  })\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData((form) => ({\n      ...form,\n      [e.target.name]: e.target.value,\n    }))\n  }\n  useEffect(() => {\n    if (!firstLoad.current) {\n      const newState = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n      }\n      setErrors(newState)\n      setFormError(\"\")\n      setFormData(newState)\n    }\n  }, [action])\n\n  useEffect(() => {\n    if (!firstLoad.current) {\n      setFormError(\"\")\n    }\n  }, [formData])\n\n  useEffect(() => {\n    firstLoad.current = false\n  }, [])\n\n  return (\n    <Layout>\n      <div className=\"h-full justify-center items-center flex flex-col gap-y-4\">\n        <button\n          onClick={() => setAction(action == \"login\" ? \"register\" : \"login\")}\n          className=\"absolute top-8 right-8 rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n        >\n          {action === \"login\" ? \"Sign Up\" : \"Sign In\"}\n        </button>\n        <h2 className=\"text-5xl font-extrabold text-yellow-300\">\n          Welcome to Kudos!\n        </h2>\n        <p className=\"font-semibold text-slate-300\">\n          {action === \"login\"\n            ? \"Log In To Give Some Praise!\"\n            : \"Sign Up To Get Started!\"}\n        </p>\n        <form method=\"post\" className=\"rounded-2xl bg-gray-200 p-6 w-96\">\n          <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full\">\n            {formError}\n          </div>\n          <div className=\"w-full text-center\">\n            <FormField\n              htmlFor=\"email\"\n              label=\"Email\"\n              value={formData.email}\n              onChange={(e) => handleChange(e)}\n              error={errors?.email}\n            />\n            <FormField\n              htmlFor=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={formData.password}\n              onChange={(e) => handleChange(e)}\n              error={errors?.password}\n            />\n            {action === \"register\" ? (\n              <>\n                <FormField\n                  htmlFor=\"firstName\"\n                  label=\"First Name\"\n                  value={formData.firstName}\n                  onChange={(e) => handleChange(e)}\n                  error={errors?.firstName}\n                />\n                <FormField\n                  htmlFor=\"lastName\"\n                  label=\"Last Name\"\n                  value={formData.lastName}\n                  onChange={(e) => handleChange(e)}\n                  error={errors?.lastName}\n                />\n              </>\n            ) : null}\n            <button\n              type=\"submit\"\n              name=\"_action\"\n              value={action}\n              className=\"rounded-xl mt-2 bg-yellow-300 px-3 py-2 text-blue-600 font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n            >\n              {action === \"login\" ? \"Sign In\" : \"Sign Up\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </Layout>\n  )\n}\n", "import React from \"react\"\n\nexport const Layout = ({ children }: { children: React.ReactNode }) => {\n  return <div className=\"h-screen w-full bg-blue-600 font-mono\">{children}</div>\n}\n", "// app/components/form-field.tsx\nimport { useEffect, useState } from \"react\"\n\ninterface FormFieldProps {\n  htmlFor: string\n  label: string\n  type?: string\n  value: any\n  onChange?: (...args: any) => any\n  error?: string\n}\n\nexport function FormField({\n  htmlFor,\n  label,\n  type = \"text\",\n  value,\n  onChange = () => {},\n  error = \"\",\n}: FormFieldProps) {\n  const [errorText, setErrorText] = useState(error)\n  useEffect(() => {\n    setErrorText(error)\n  }, [error])\n\n  return (\n    <>\n      <label htmlFor={htmlFor} className=\"text-blue-600 font-semibold\">\n        {label}\n      </label>\n      <input\n        onChange={(e) => {\n          onChange(e)\n          setErrorText(\"\")\n        }}\n        type={type}\n        id={htmlFor}\n        name={htmlFor}\n        className=\"w-full p-2 rounded-xl my-2\"\n        value={value}\n      />\n      <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full\">\n        {errorText || \"\"}\n      </div>\n    </>\n  )\n}\n", "// app/utils/validators.server.ts\n\nexport const validateEmail = (email: string): string | undefined => {\n  var validRegex =\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n  if (!email.length || !validRegex.test(email)) {\n    return \"Please enter a valid email address\"\n  }\n}\n\nexport const validatePassword = (password: string): string | undefined => {\n  if (password.length < 5) {\n    return \"Please enter a password that is at least 5 characters long\"\n  }\n}\n\nexport const validateName = (name: string): string | undefined => {\n  if (!name.length) return `Please enter a value`\n}\n", "// app/routes/home.tsx\n\nimport type { LoaderFunction } from \"@remix-run/node\"\nimport { json } from \"@remix-run/node\"\nimport { useLoaderData, Outlet } from \"@remix-run/react\"\nimport { requireUserId } from \"~/utils/auth.server\"\nimport { Layout } from \"~/components/layout\"\nimport { UserPanel } from \"~/components/user-panel\"\nimport { getOtherUsers } from \"~/utils/user.server\"\nimport { getFilteredKudos, getRecentKudos } from \"~/utils/kudo.server\"\nimport { Kudo } from \"~/components/kudo\"\nimport type { Kudo as IKudo, Profile, Prisma } from \"@prisma/client\"\nimport { SearchBar } from \"~/components/search-bar\"\nimport { RecentBar } from \"~/components/recent-bar\"\n\ninterface KudoWithProfile extends IKudo {\n  author: {\n    profile: Profile\n  }\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request)\n  const users = await getOtherUsers(userId)\n  const url = new URL(request.url)\n  const sort = url.searchParams.get(\"sort\")\n  const filter = url.searchParams.get(\"filter\")\n  let sortOptions: Prisma.KudoOrderByWithRelationInput = {}\n  if (sort) {\n    if (sort === \"date\") {\n      sortOptions = { createdAt: \"desc\" }\n    }\n    if (sort === \"sender\") {\n      sortOptions = { author: { profile: { firstName: \"asc\" } } }\n    }\n    if (sort === \"emoji\") {\n      sortOptions = { style: { emoji: \"asc\" } }\n    }\n  }\n  let textFilter: Prisma.KudoWhereInput = {}\n  if (filter) {\n    textFilter = {\n      OR: [\n        { message: { mode: \"insensitive\", contains: filter } },\n        {\n          author: {\n            OR: [\n              {\n                profile: {\n                  is: { firstName: { mode: \"insensitive\", contains: filter } },\n                },\n              },\n              {\n                profile: {\n                  is: { lastName: { mode: \"insensitive\", contains: filter } },\n                },\n              },\n            ],\n          },\n        },\n      ],\n    }\n  }\n  const kudos = await getFilteredKudos(userId, sortOptions, textFilter)\n  const recentKudos = await getRecentKudos()\n  return json({ users, kudos, recentKudos })\n}\n\nexport default function Home() {\n  const { users, kudos, recentKudos } = useLoaderData()\n  return (\n    <Layout>\n      <Outlet />\n      <div className=\"h-full flex\">\n        <UserPanel users={users} />\n        <div className=\"flex-1 flex flex-col\">\n          <SearchBar />\n          <div className=\"flex-1 flex\">\n            <div className=\"w-full p-10 flex flex-col gap-y-4\">\n              {kudos.map((kudo: KudoWithProfile) => (\n                <Kudo key={kudo.id} kudo={kudo} profile={kudo.author.profile} />\n              ))}\n            </div>\n            <RecentBar kudos={recentKudos} />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n", "// app/components/user-panel.tsx\nimport type { User } from \"@prisma/client\"\nimport { useNavigate } from \"@remix-run/react\"\nimport { UserCircle } from \"~/components/user-circle\"\n\nexport function UserPanel({ users }: { users: User[] }) {\n  const navigate = useNavigate()\n  return (\n    <div className=\"w-1/6 bg-gray-200 flex flex-col\">\n      <div className=\"text-center bg-gray-300 h-20 flex items-center justify-center\">\n        <h2 className=\"text-xl text-blue-600 font-semibold\">My Team</h2>\n      </div>\n      <div className=\"flex-1 overflow-y-auto py-4 flex flex-col gap-y-10\">\n        {users.map((user) => (\n          <UserCircle\n            key={user.id}\n            profile={user.profile}\n            className=\"h-24 w-24 mx-auto flex-shrink-0\"\n            onClick={() => navigate(`kudo/${user.id}`)}\n          />\n        ))}\n      </div>\n      <div className=\"text-center p-6 bg-gray-300\">\n        <form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n          >\n            Sign Out\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n", "// app/components/user-circle.tsx\nimport type { Profile } from \"@prisma/client\"\n\ninterface props {\n  profile: Profile\n  className?: string\n  onClick?: (...args: any) => any\n}\n\nexport function UserCircle({ profile, onClick, className }: props) {\n  return (\n    <div\n      className={`${className} cursor-pointer bg-gray-400 rounded-full flex justify-center items-center`}\n      onClick={onClick}\n    >\n      <h2>\n        {profile.firstName.charAt(0).toUpperCase()}\n        {profile.lastName.charAt(0).toUpperCase()}\n      </h2>\n    </div>\n  )\n}\n", "// app/utils/kudos.server.ts\n\nimport { prisma } from \"./prisma.server\"\nimport type { KudoStyle, Prisma } from \"@prisma/client\"\n\nexport const createKudo = async (\n  message: string,\n  userId: string,\n  recipientId: string,\n  style: KudoStyle\n) => {\n  await prisma.kudo.create({\n    data: {\n      // 1\n      message,\n      style,\n      // 2\n      author: {\n        connect: {\n          id: userId,\n        },\n      },\n      recipient: {\n        connect: {\n          id: recipientId,\n        },\n      },\n    },\n  })\n}\nexport const getFilteredKudos = async (\n  userId: string,\n  sortFilter: Prisma.KudoOrderByWithRelationInput,\n  whereFilter: Prisma.KudoWhereInput\n) => {\n  return await prisma.kudo.findMany({\n    select: {\n      id: true,\n      style: true,\n      message: true,\n      author: {\n        select: {\n          profile: true,\n        },\n      },\n    },\n    orderBy: {\n      ...sortFilter,\n    },\n    where: {\n      recipientId: userId,\n      ...whereFilter,\n    },\n  })\n}\nexport const getRecentKudos = async () => {\n  return await prisma.kudo.findMany({\n    take: 3,\n    orderBy: {\n      createdAt: \"desc\",\n    },\n    select: {\n      style: {\n        select: {\n          emoji: true,\n        },\n      },\n      recipient: {\n        select: {\n          id: true,\n          profile: true,\n        },\n      },\n    },\n  })\n}\n", "// app/utils/constants.ts\n\nexport const colorMap = {\n  RED: \"text-red-400\",\n  GREEN: \"text-green-400\",\n  BLUE: \"text-blue-400\",\n  WHITE: \"text-white\",\n  YELLOW: \"text-yellow-300\",\n}\n\nexport const backgroundColorMap = {\n  RED: \"bg-red-400\",\n  GREEN: \"bg-green-400\",\n  BLUE: \"bg-blue-400\",\n  WHITE: \"bg-white\",\n  YELLOW: \"bg-yellow-300\",\n}\n\nexport const emojiMap = {\n  THUMBSUP: \"\uD83D\uDC4D\",\n  PARTY: \"\uD83C\uDF89\",\n  HANDSUP: \"\uD83D\uDE4C\uD83C\uDFFB\",\n}\n\nexport const sortOptions = [\n  {\n    name: \"Date\",\n    value: \"date\",\n  },\n  {\n    name: \"Sender Name\",\n    value: \"sender\",\n  },\n  {\n    name: \"Emoji\",\n    value: \"emoji\",\n  },\n]\n", "// app/components/kudo.tsx\n\nimport { UserCircle } from \"~/components/user-circle\"\nimport type { Profile, Kudo as IKudo } from \"@prisma/client\"\nimport { colorMap, backgroundColorMap, emojiMap } from \"~/utils/constants\"\n\nexport function Kudo({\n  profile,\n  kudo,\n}: {\n  profile: Profile\n  kudo: Partial<IKudo>\n}) {\n  return (\n    <div\n      className={`flex ${\n        backgroundColorMap[kudo.style?.backgroundColor || \"RED\"]\n      } p-4 rounded-xl w-full gap-x-2 relative`}\n    >\n      <div>\n        <UserCircle profile={profile} className=\"h-16 w-16\" />\n      </div>\n      <div className=\"flex flex-col\">\n        <p\n          className={`${\n            colorMap[kudo.style?.textColor || \"WHITE\"]\n          } font-bold text-lg whitespace-pre-wrap break-all`}\n        >\n          {profile.firstName} {profile.lastName}\n        </p>\n        <p\n          className={`${\n            colorMap[kudo.style?.textColor || \"WHITE\"]\n          } whitespace-pre-wrap break-all`}\n        >\n          {kudo.message}\n        </p>\n      </div>\n      <div className=\"absolute bottom-4 right-4 bg-white rounded-full h-10 w-10 flex items-center justify-center text-2xl\">\n        {emojiMap[kudo.style?.emoji || \"THUMBSUP\"]}\n      </div>\n    </div>\n  )\n}\n", "// app/components/search-bar.tsx\n\nimport { useNavigate, useSearchParams } from \"@remix-run/react\"\nimport { SelectBox } from \"./select-box\"\nimport { sortOptions } from \"~/utils/constants\"\nimport { useState } from \"react\"\n\nexport function SearchBar() {\n  const navigate = useNavigate()\n  let [searchParams] = useSearchParams()\n  const [sortValue, setSortValue] = useState(searchParams.get(\"sort\") || \"\")\n\n  const clearFilters = () => {\n    searchParams.delete(\"filter\")\n    searchParams.delete(\"sort\")\n    navigate(\"/\")\n  }\n\n  return (\n    <form className=\"w-full px-6 flex items-center gap-x-4 border-b-4 border-b-blue-900 border-opacity-30 h-20\">\n      <div className={`flex items-center w-2/5`}>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          className=\"w-full rounded-xl px-3 py-2\"\n          placeholder=\"Search a message or name\"\n        />\n        <svg\n          className=\"w-4 h-4 fill-current text-gray-400 -ml-8\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n          <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n        </svg>\n      </div>\n      <SelectBox\n        className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n        containerClassName=\"w-40\"\n        name=\"sort\"\n        options={sortOptions}\n        value={sortValue}\n        onChange={(e) => setSortValue(e.target.value)}\n      />\n      <button\n        type=\"submit\"\n        className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n      >\n        Search\n      </button>\n      {(searchParams.get(\"filter\") || searchParams.get(\"sort\")) && (\n        <button\n          onClick={clearFilters}\n          className=\"rounded-xl bg-red-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n        >\n          Clear Filters\n        </button>\n      )}\n      <div className=\"flex-1\" />\n    </form>\n  )\n}\n", "// app/components/select-box.tsx\n\ninterface props {\n  options: {\n    name: string\n    value: any\n  }[]\n  className?: string\n  containerClassName?: string\n  id?: string\n  name?: string\n  label?: string\n  value?: any\n  onChange?: (...args: any) => any\n}\n\nexport function SelectBox({\n  options = [],\n  onChange = () => {},\n  className = \"\",\n  containerClassName = \"\",\n  name,\n  id,\n  value,\n  label,\n}: props) {\n  return (\n    <div>\n      <label htmlFor={id} className=\"text-blue-600 font-semibold\">\n        {label}\n      </label>\n      <div className={`flex items-center ${containerClassName} my-2`}>\n        <select\n          className={`${className} appearance-none`}\n          id={id}\n          name={name}\n          onChange={onChange}\n          value={value || \"\"}\n        >\n          {options.map((option) => (\n            <option key={option.name} value={option.value}>\n              {option.name}\n            </option>\n          ))}\n        </select>\n        <svg\n          className=\"w-4 h-4 fill-current text-gray-400 -ml-7 mt-1 pointer-events-none\"\n          viewBox=\"0 0 140 140\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g>\n            <path d=\"m121.3,34.6c-1.6-1.6-4.2-1.6-5.8,0l-51,51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8,0-1.6,1.6-1.6,4.2 0,5.8l53.9,53.9c0.8,0.8 1.8,1.2 2.9,1.2 1,0 2.1-0.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2 0.1-5.8z\" />\n          </g>\n        </svg>\n      </div>\n    </div>\n  )\n}\n", "// app/components/recent-bar.tsx\n\nimport type { User, Kudo } from \"@prisma/client\"\nimport { UserCircle } from \"./user-circle\"\nimport { emojiMap } from \"~/utils/constants\"\n\ninterface KudoWithRecipient extends Kudo {\n  recipient: User\n}\n\nexport function RecentBar({ kudos }: { kudos: KudoWithRecipient[] }) {\n  return (\n    <div className=\"w-2/5 border-l-4 border-l-yellow-300 flex flex-col items-center\">\n      <h2 className=\"text-xl text-yellow-300 font-semibold my-6\">\n        Recent Kudos\n      </h2>\n      <div className=\"h-full flex flex-col gap-y-10 mt-10\">\n        {kudos.map((kudo) => (\n          <div className=\"h-24 w-24 relative\" key={kudo.recipient.id}>\n            <UserCircle\n              profile={kudo.recipient.profile}\n              className=\"w-20 h-20\"\n            />\n            <div className=\"h-8 w-8 text-3xl bottom-2 right-4 rounded-full absolute flex justify-center items-center\">\n              {emojiMap[kudo?.style?.emoji || \"THUMBSUP\"]}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n", "// app/routes/home/kudo.$userId.tsx\n\nimport { useState } from \"react\"\nimport type { User } from \"@prisma/client\"\nimport type { LoaderFunction } from \"@remix-run/node\"\nimport { json, redirect, ActionFunction } from \"@remix-run/node\"\nimport { useLoaderData, useActionData } from \"@remix-run/react\"\nimport { getUserById } from \"~/utils/user.server\"\nimport { getUser } from \"~/utils/auth.server\"\nimport { Modal } from \"~/components/modal\"\nimport { UserCircle } from \"~/components/user-circle\"\nimport type { Color, Emoji, KudoStyle } from \"@prisma/client\"\nimport { SelectBox } from \"~/components/select-box\"\nimport { colorMap, emojiMap } from \"~/utils/constants\"\nimport { Kudo } from \"~/components/kudo\"\nimport { requireUserId } from \"~/utils/auth.server\"\nimport { createKudo } from \"~/utils/kudo.server\"\n\n// 1\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  // 2\n  const { userId } = params\n\n  if (typeof userId !== \"string\") {\n    return redirect(\"/home\")\n  }\n  const recipient = await getUserById(userId)\n  const user = await getUser(request)\n  return json({ recipient, user })\n}\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request)\n  // 2\n  const form = await request.formData()\n  const message = form.get(\"message\")\n  const backgroundColor = form.get(\"backgroundColor\")\n  const textColor = form.get(\"textColor\")\n  const emoji = form.get(\"emoji\")\n  const recipientId = form.get(\"recipientId\")\n  // 3\n  if (\n    typeof message !== \"string\" ||\n    typeof recipientId !== \"string\" ||\n    typeof backgroundColor !== \"string\" ||\n    typeof textColor !== \"string\" ||\n    typeof emoji !== \"string\"\n  ) {\n    return json({ error: `Invalid Form Data` }, { status: 400 })\n  }\n  if (!message.length) {\n    return json({ error: `Please provide a message.` }, { status: 400 })\n  }\n  if (!recipientId.length) {\n    return json({ error: `No recipient found...` }, { status: 400 })\n  }\n  // 4\n  await createKudo(message, userId, recipientId, {\n    backgroundColor: backgroundColor as Color,\n    textColor: textColor as Color,\n    emoji: emoji as Emoji,\n  })\n  // 5\n  return redirect(\"/home\")\n}\n\nexport default function KudoModal() {\n  // 3\n  const actionData = useActionData()\n  const [formError] = useState(actionData?.error || \"\")\n  const [formData, setFormData] = useState({\n    message: \"\",\n    style: {\n      backgroundColor: \"RED\",\n      textColor: \"WHITE\",\n      emoji: \"THUMBSUP\",\n    } as KudoStyle,\n  })\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    field: string\n  ) => {\n    setFormData((data) => ({ ...data, [field]: e.target.value }))\n  }\n\n  const handleStyleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    field: string\n  ) => {\n    setFormData((data) => ({\n      ...data,\n      style: {\n        ...data.style,\n        [field]: e.target.value,\n      },\n    }))\n  }\n  const getOptions = (data: any) =>\n    Object.keys(data).reduce((acc: any[], curr) => {\n      acc.push({\n        name: curr.charAt(0).toUpperCase() + curr.slice(1).toLowerCase(),\n        value: curr,\n      })\n      return acc\n    }, [])\n\n  const colors = getOptions(colorMap)\n  const emojis = getOptions(emojiMap)\n\n  const { recipient, user }: { recipient: User; user: User } = useLoaderData()\n\n  // 4\n  return (\n    <Modal isOpen={true} className=\"w-2/3 p-10\">\n      <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full mb-2\">\n        {formError}\n      </div>\n      <form method=\"post\">\n        <input type=\"hidden\" value={recipient.id} name=\"recipientId\" />\n        <div className=\"flex flex-col md:flex-row gap-y-2 md:gap-y-0\">\n          <div className=\"text-center flex flex-col items-center gap-y-2 pr-8\">\n            <UserCircle profile={recipient.profile} className=\"h-24 w-24\" />\n            <p className=\"text-blue-300\">\n              {recipient.profile.firstName} {recipient.profile.lastName}\n            </p>\n            {recipient.profile.department && (\n              <span className=\"px-2 py-1 bg-gray-300 rounded-xl text-blue-300 w-auto\">\n                {recipient.profile.department[0].toUpperCase() +\n                  recipient.profile.department.toLowerCase().slice(1)}\n              </span>\n            )}\n          </div>\n          <div className=\"flex-1 flex flex-col gap-y-4\">\n            <textarea\n              name=\"message\"\n              className=\"w-full rounded-xl h-40 p-4\"\n              value={formData.message}\n              onChange={(e) => handleChange(e, \"message\")}\n              placeholder={`Say something nice about ${recipient.profile.firstName}...`}\n            />\n            <div className=\"flex flex-col items-center md:flex-row md:justify-start gap-x-4\">\n              <SelectBox\n                options={colors}\n                name=\"backgroundColor\"\n                value={formData.style.backgroundColor}\n                onChange={(e) => handleStyleChange(e, \"backgroundColor\")}\n                label=\"Background Color\"\n                containerClassName=\"w-36\"\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n              />\n              <SelectBox\n                options={colors}\n                name=\"textColor\"\n                value={formData.style.textColor}\n                onChange={(e) => handleStyleChange(e, \"textColor\")}\n                label=\"Text Color\"\n                containerClassName=\"w-36\"\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n              />\n              <SelectBox\n                options={emojis}\n                label=\"Emoji\"\n                name=\"emoji\"\n                value={formData.style.emoji}\n                onChange={(e) => handleStyleChange(e, \"emoji\")}\n                containerClassName=\"w-36\"\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n              />\n            </div>\n          </div>\n        </div>\n        <br />\n        <p className=\"text-blue-600 font-semibold mb-2\">Preview</p>\n        <div className=\"flex flex-col items-center md:flex-row gap-x-24 gap-y-2 md:gap-y-0\">\n          <Kudo profile={user.profile} kudo={formData} />\n          <div className=\"flex-1\" />\n          <button\n            type=\"submit\"\n            className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 w-80 h-12 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n          >\n            Send\n          </button>\n        </div>\n      </form>\n    </Modal>\n  )\n}\n", "// app/components/portal.tsx\n\nimport { createPortal } from \"react-dom\"\nimport { useState, useEffect } from \"react\"\n\ninterface props {\n  children: React.ReactNode\n  wrapperId: string\n}\n\n// 1\nconst createWrapper = (wrapperId: string) => {\n  const wrapper = document.createElement(\"div\")\n  wrapper.setAttribute(\"id\", wrapperId)\n  document.body.appendChild(wrapper)\n  return wrapper\n}\n\nexport const Portal: React.FC<props> = ({ children, wrapperId }) => {\n  const [wrapper, setWrapper] = useState<HTMLElement | null>(null)\n\n  useEffect(() => {\n    // 2\n    let element = document.getElementById(wrapperId)\n    let created = false\n\n    if (!element) {\n      created = true\n      element = createWrapper(wrapperId)\n    }\n\n    setWrapper(element)\n\n    // 3\n    return () => {\n      if (created && element?.parentNode) {\n        element.parentNode.removeChild(element)\n      }\n    }\n  }, [wrapperId])\n\n  if (wrapper === null) return null\n\n  // 4\n  return createPortal(children, wrapper)\n}\n", "// app/components/modal.tsx\nimport { Portal } from \"./portal\"\nimport { useNavigate } from \"@remix-run/react\"\n\ninterface props {\n  children: React.ReactNode\n  isOpen: boolean\n  ariaLabel?: string\n  className?: string\n}\n\nexport const Modal: React.FC<props> = ({\n  children,\n  isOpen,\n  ariaLabel,\n  className,\n}) => {\n  const navigate = useNavigate()\n  if (!isOpen) return null\n\n  return (\n    <Portal wrapperId=\"modal\">\n      <div\n        className=\"fixed inset-0 overflow-y-auto bg-gray-600 bg-opacity-80\"\n        aria-labelledby={ariaLabel ?? \"modal-title\"}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        onClick={() => navigate(\"/home\")}\n      ></div>\n      <div className=\"fixed inset-0 pointer-events-none flex justify-center items-center max-h-screen overflow-scroll\">\n        <div\n          className={`${className} p-4 bg-gray-200 pointer-events-auto max-h-screen md:rounded-xl`}\n        >\n          {/* This is where the modal content is rendered  */}\n          {children}\n        </div>\n      </div>\n    </Portal>\n  )\n}\n", "export default {'version':'d167d8c7','entry':{'module':'/build/entry.client-SLY2CWMQ.js','imports':['/build/_shared/chunk-SXNYENQH.js','/build/_shared/chunk-SAJT5MBD.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-CAEUYSQO.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home':{'id':'routes/home','parentId':'root','path':'home','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home-62HYFG6L.js','imports':['/build/_shared/chunk-RLLF6W7Q.js','/build/_shared/chunk-57YZOMJR.js','/build/_shared/chunk-NXDGLDYE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home/kudo.$userId':{'id':'routes/home/kudo.$userId','parentId':'routes/home','path':'kudo/:userId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home/kudo.$userId-6OP4II2M.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-J7GOLBLZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-K2RIKFVY.js','imports':['/build/_shared/chunk-RLLF6W7Q.js','/build/_shared/chunk-NXDGLDYE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-DWTFUA35.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-D167D8C7.js'};", "\nimport * as entryServer from \"/home/clgonzalezgroh/capa/69prisma-remix/app/entry.server.tsx\";\nimport * as route0 from \"/home/clgonzalezgroh/capa/69prisma-remix/app/root.tsx\";\nimport * as route1 from \"/home/clgonzalezgroh/capa/69prisma-remix/app/routes/logout.ts\";\nimport * as route2 from \"/home/clgonzalezgroh/capa/69prisma-remix/app/routes/index.ts\";\nimport * as route3 from \"/home/clgonzalezgroh/capa/69prisma-remix/app/routes/login.tsx\";\nimport * as route4 from \"/home/clgonzalezgroh/capa/69prisma-remix/app/routes/home.tsx\";\nimport * as route5 from \"/home/clgonzalezgroh/capa/69prisma-remix/app/routes/home/kudo.$userId.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/home\": {\n      id: \"routes/home\",\n      parentId: \"root\",\n      path: \"home\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/home/kudo.$userId\": {\n      id: \"routes/home/kudo.$userId\",\n      parentId: \"routes/home\",\n      path: \"kudo/:userId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": []
}
